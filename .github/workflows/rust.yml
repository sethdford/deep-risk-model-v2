name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        blas: [with-blas, without-blas]
        include:
          - blas: with-blas
            features: "openblas"
          - blas: without-blas
            features: "no-blas"
        exclude:
          # Exclude Windows with OpenBLAS for now as it can be problematic
          - os: windows-latest
            blas: with-blas

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Set up Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.os }}-${{ matrix.blas }}
    
    # Install system dependencies for OpenBLAS on Ubuntu
    - name: Install OpenBLAS dependencies (Ubuntu)
      if: matrix.blas == 'with-blas' && matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y gfortran
    
    # Build with the specified features
    - name: Build
      run: cargo build --verbose --no-default-features --features ${{ matrix.features }}
    
    # Build examples with the specified features
    - name: Build examples
      run: cargo build --verbose --no-default-features --features ${{ matrix.features }} --examples
    
    # Run tests with the specified features
    - name: Run tests
      run: cargo test --verbose --no-default-features --features ${{ matrix.features }}
    
    # Cross-feature test: ensure code that doesn't use BLAS works with BLAS enabled
    - name: Cross-feature test (with BLAS)
      if: matrix.blas == 'with-blas'
      run: cargo test --verbose --no-default-features --features ${{ matrix.features }} -- --test-threads=1 fallback
