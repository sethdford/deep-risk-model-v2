name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  PYO3_USE_ABI3_FORWARD_COMPATIBILITY: 1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        blas: [default, no-blas]
        include:
          - os: ubuntu-latest
            blas: default
            features: "--features openblas"
          - os: macos-latest
            blas: default
            features: "--features accelerate"
          - os: windows-latest
            blas: default
            features: "--no-default-features --features system"
          - blas: no-blas
            features: "--no-default-features --features no-blas"
        exclude:
          # Exclude Windows with no-blas as it's not supported
          - os: windows-latest
            blas: no-blas

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Set up Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.os }}-${{ matrix.blas }}
    
    # Install system dependencies for OpenBLAS on Ubuntu
    - name: Install OpenBLAS dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest' && matrix.blas == 'default'
      run: |
        sudo apt-get update
        sudo apt-get install -y libopenblas-dev gfortran
    
    # Install vcpkg and OpenBLAS on Windows
    - name: Install OpenBLAS via vcpkg (Windows)
      if: matrix.os == 'windows-latest' && matrix.blas == 'default'
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        cd vcpkg
        ./bootstrap-vcpkg.bat
        ./vcpkg.exe install openblas:x64-windows
        ./vcpkg.exe integrate install
        echo "VCPKG_ROOT=${{ github.workspace }}/vcpkg" >> $GITHUB_ENV
      shell: bash
    
    # Build with the specified features
    - name: Build
      run: cargo build --verbose ${{ matrix.features }}
    
    # Build examples with the specified features
    - name: Build examples
      run: cargo build --verbose ${{ matrix.features }} --examples
    
    # Run tests with the specified features
    - name: Run tests
      run: cargo test --verbose ${{ matrix.features }}
    
    # Run the no-blas example specifically for no-blas configurations
    - name: Run no-blas example
      if: matrix.blas == 'no-blas'
      run: cargo run --example no_blas_example ${{ matrix.features }}
