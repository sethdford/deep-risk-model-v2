[package]
name = "deep_risk_model"
version = "0.1.0"
edition = "2021"
authors = ["Seth Ford <seth.ford@gmail.com>"]
description = "A deep learning-based risk model for financial markets"
license = "MIT"

[dependencies]
# Core async runtime
tokio = { version = "1.0", features = ["macros", "rt-multi-thread"] }

# HTTP client
reqwest = { version = "0.11", default-features = false, features = ["rustls-tls"] }

# HTTP server and middleware
axum = "0.7.2"
tower-http = { version = "0.5", features = ["cors"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Logging and error handling
tracing = { version = "0.1", features = ["log"] }
tracing-subscriber = { version = "0.3", default-features = false, features = ["fmt", "json"] }

# Data processing
ndarray = { version = "0.16.1", features = ["serde"] }
ndarray-rand = "0.14.0"
ndarray-stats = "0.5.1"
rand = "0.8.5"
rand_distr = "0.4.3"
rand_chacha = "0.3"
num-traits = "0.2"

# Linear algebra - Pure Rust implementation (no external dependencies)
linfa-linalg = { version = "0.1.0", optional = true }

# Async traits
async-trait = "0.1"

# Error handling
anyhow = "1.0.75"
thiserror = "1.0"
parking_lot = "0.12"

# Date/time handling
chrono = { version = "0.4", features = ["serde"] }

# AWS Lambda dependencies
lambda_http = { version = "0.8.3" }
lambda_runtime = { version = "0.8.3" }
aws-config = { version = "0.55.3", features = ["rustls"], default-features = false }
aws-sdk-s3 = { version = "0.28.0", features = ["rustls"], default-features = false }
aws-types = "1.0"
tokio-util = { version = "0.7", features = ["codec"] }

# Additional dependencies
rayon = "1.7"

# Memory monitoring
sysinfo = "0.29"

# OpenSSL with vendored feature
openssl = { version = "0.10", features = ["vendored"] }
openssl-sys = { version = "0.9", features = ["vendored"] }
ndarray-linalg = { version = "0.17.0", optional = true }

# GPU acceleration
cudarc = { version = "0.9.14", optional = true }
candle-core = { version = "0.3.1", optional = true }

[dev-dependencies]
approx = "0.5.1"
criterion = "0.5"

[features]
# Default features
default = ["blas-enabled"]

# System-specific features
system = []
static = []

# Features for conditional compilation
gpu = ["dep:cudarc", "dep:candle-core"]

# BLAS features - using openblas-static for Lambda compatibility
blas-enabled = ["ndarray-linalg"]
pure-rust = ["linfa-linalg"]
no-blas = []

# Additional features
openblas-static = ["ndarray-linalg", "ndarray-linalg/openblas-static"]
openblas-system = ["ndarray-linalg", "ndarray-linalg/openblas-system"]
netlib-static = ["ndarray-linalg", "ndarray-linalg/netlib-static"]
netlib-system = ["ndarray-linalg", "ndarray-linalg/netlib-system"]
intel-mkl-static = ["ndarray-linalg", "ndarray-linalg/intel-mkl-static"]
intel-mkl-system = ["ndarray-linalg", "ndarray-linalg/intel-mkl-system"]

linfa-linalg = ["dep:linfa-linalg"]
ndarray-linalg = ["dep:ndarray-linalg"]

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = 2

[lib]
name = "deep_risk_model"
path = "src/lib.rs"

[[bin]]
name = "bootstrap"
path = "src/bin/lambda/bootstrap.rs"

[[bin]]
name = "api_server"
path = "src/bin/api/server.rs"

[[bin]]
name = "lambda_handler"
path = "src/bin/lambda/handler.rs"

[[bin]]
name = "lambda_local"
path = "src/bin/lambda/local.rs"

[[bin]]
name = "generate_lambda_payload"
path = "src/bin/lambda/generate_payload.rs"

[[bin]]
name = "run_model_with_test_data"
path = "src/bin/lambda/run_model_with_test_data.rs"

# Commented out benches to fix build issues
# [[bench]]
# name = "transformer_benchmarks"
# harness = false

[[bench]]
name = "model_benchmarks"
harness = false

[[example]]
name = "basic_demo"
path = "examples/basic_demo.rs"

[[example]]
name = "risk_model_demo"
path = "examples/risk_model_demo.rs"

[[example]]
name = "regime_example"
path = "examples/regime_example.rs"

[[example]]
name = "quantization_example"
path = "examples/quantization_example.rs"

[[example]]
name = "memory_optimization_example"
path = "examples/memory_optimization_example.rs"

[[example]]
name = "linalg_example"
path = "examples/linalg_example.rs"
